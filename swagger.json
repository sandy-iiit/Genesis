{
  "openapi": "3.0.0",
  "info": {
    "title": "Your API Documentation",
    "description": "API documentation for your Express application",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "components": {
    "securitySchemes": {
      "csrfAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-CSRF-Token"
      },
      "JWTToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwtToken"
      },
      "jwtAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "paths": {
    "/data": {
      "get": {
        "summary": "Get data",
        "description": "Retrieve data from the server.",
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/answer-queries": {
      "get": {
        "summary": "Get unanswered queries",
        "description": "Retrieve unanswered queries from the database.",
        "responses": {
          "200": {
            "description": "A list of unanswered queries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Query"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deleteQuery": {
      "post": {
        "summary": "Delete Query",
        "description": "Delete a query by its ID.",
        "security": [
          {
            "csrfAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the query to be deleted."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Message indicating the successful deletion of the query."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "securitySchemes": {
      "csrfAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-CSRF-Token"
      },
      "JWTAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwtToken",
        "description": "Enter JWT token in the format \"Bearer {token}\""
      },
      "CSRFToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-csrf-token"
      },
      "jwtAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwtToken"
      },
      "JWTToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwtToken"
      }
    },
    "/getalladmins": {
      "get": {
        "summary": "Get all admins",
        "description": "Retrieve a list of all admins from the database.",
        "security": [
          {
            "csrfAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response with a list of admins.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No admins found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No admins found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "User signup",
        "description": "Create a new user account.",
        "security": [
          {
            "csrfAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  },
                  "sex": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user login credentials.",
        "security": [
          {
            "csrfAuth": []
          },
          {
            "CSRFToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The user's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  },
                  "type": {
                    "type": "string",
                    "description": "The user's type (User/Admin/Agent)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logout the currently authenticated user.",
        "security": [
          {
            "csrfAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/check": {
      "get": {
        "summary": "Check user authentication",
        "description": "Check if the user is authenticated and return user information.",
        "security": [
          {
            "csrfAuth": []
          },
          {
            "JWTToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "User authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "description": "The ID of the authenticated user."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the authenticated user."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the authenticated user (User/Admin/Agent)."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/write-query": {
      "post": {
        "summary": "Write query",
        "description": "Write a new query.",
        "security": [
          {
            "csrfAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "description": "The query to be written"
                  },
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user who wrote the query"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query added successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/findanagent": {
      "post": {
        "summary": "Find an agent",
        "description": "Send an email to find an agent.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The recipient's email address"
                  },
                  "name": {
                    "type": "string",
                    "description": "The recipient's name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "csrfAuth": []
          },
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/updateDetails": {
      "post": {
        "summary": "Update user details",
        "description": "Update user details such as name, address, email, phone, and age.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the user to update"
                  },
                  "name": {
                    "type": "string",
                    "description": "The user's new name"
                  },
                  "address": {
                    "type": "string",
                    "description": "The user's new address"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's new email address"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user's new phone number"
                  },
                  "age": {
                    "type": "integer",
                    "description": "The user's new age"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of user (User/Admin/Agent)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details updated successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "csrfAuth": []
          },
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/drop-review": {
      "post": {
        "summary": "Submit a review",
        "description": "Submit a review to Genesis Insurances.",
        "security": [
          {
            "jwtAuth": []
          },
          {
            "csrfAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the reviewer."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email of the reviewer."
                  },
                  "review": {
                    "type": "string",
                    "description": "The review content."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review submitted successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/health-form": {
      "post": {
        "summary": "Upload health application form",
        "description": "Upload health application form along with required documents.",
        "security": [
          {
            "jwtAuth": []
          },
          {
            "csrfAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "The first name of the applicant."
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The last name of the applicant."
                  },
                  "age": {
                    "type": "integer",
                    "description": "The age of the applicant."
                  },
                  "sex": {
                    "type": "string",
                    "enum": [
                      "Male",
                      "Female",
                      "Other"
                    ],
                    "description": "The sex of the applicant."
                  },
                  "healthCondition": {
                    "type": "string",
                    "description": "The health condition of the applicant."
                  },
                  "nominee": {
                    "type": "string",
                    "description": "The nominee of the applicant."
                  },
                  "nomineeAge": {
                    "type": "integer",
                    "description": "The age of the nominee."
                  },
                  "nomineeRelation": {
                    "type": "string",
                    "description": "The relationship of the nominee with the applicant."
                  },
                  "policyId": {
                    "type": "string",
                    "description": "The policy ID."
                  },
                  "policyTerm": {
                    "type": "integer",
                    "description": "The term of the policy."
                  },
                  "policyName": {
                    "type": "string",
                    "description": "The name of the policy."
                  },
                  "policyType": {
                    "type": "string",
                    "description": "The type of the policy."
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of the policy."
                  },
                  "applier": {
                    "type": "string",
                    "description": "The person who applied."
                  },
                  "duration": {
                    "type": "integer",
                    "description": "The duration of the policy."
                  },
                  "aadhar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The Aadhar card of the applicant."
                  },
                  "pan": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PAN card of the applicant."
                  },
                  "dobProof": {
                    "type": "string",
                    "format": "binary",
                    "description": "Proof of date of birth."
                  },
                  "healthCertificate": {
                    "type": "string",
                    "format": "binary",
                    "description": "Health certificate."
                  },
                  "nomineeAadhar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The Aadhar card of the nominee."
                  },
                  "nomineeAddressProof": {
                    "type": "string",
                    "format": "binary",
                    "description": "Address proof of the nominee."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Health application form uploaded successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/getCSRFToken": {
      "get": {
        "summary": "Get CSRF Token",
        "description": "Get a CSRF token for use in form submissions.",
        "responses": {
          "200": {
            "description": "A CSRF token is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "CSRFToken": {
                      "type": "string",
                      "description": "The CSRF token generated for the session."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "csrfAuth": []
          }
        ]
      }
    }
  },
  "tags": []
}